#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include "keycode_japanese.h"


// ブートローダーを導入する
// &bootloader

//&kp LC(RG(LEFT))        &kp LG(RC(RIGHT))


&mt { 
    flavor = "balanced"; 
    tapping-term-ms = <165>;
    quick-tap-ms = <150>; 
    require-prior-idle-ms = <125>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <165>; // change 200 to 150
    quick-tap-ms = <150>; // change 200 to 150
    require-prior-idle-ms = <125>;
};

    // 複数キーの同時押しに特別の入力を設定できる
    // キー番号早見表：
    // 0  1  2  3  4           5  6  7  8  9
    // 10 11 12 13 14          15 16 17 18 19
    // 20 21 22 23 24  25  26  27 28 29 30 31
    //      32 33 34   35  36  37 38 39


/ { 
    combos {
        compatible = "zmk,combos";

       m4_L {
            bindings = <&mo 4>;
            key-positions = <12 13>;

        };	

       m5_L {
            bindings = <&mo 5>;
            key-positions = <11 12>;

        };	

       m5_R {
            bindings = <&mo 5>;
            key-positions = <17 18>;

        };


       bootloader {
            bindings = <&bootloader>;
            key-positions = <0 9 25 26>;
            timeout-ms = <50>;
        };

        lang1 {
            bindings = <&kp LANG1>;
            key-positions = <12 13>; /* D + F */
            layers = <0>;
        };

        lang2 {
            bindings = <&kp LANG2>;
            key-positions = <16 17>; /* J + K */
            layers = <0>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <20 21>; /* Z + X */
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>; /* Q + W */
            layers = <0>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <16 17>; /* J + K (on layer 2) */
            layers = <2>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <18 19>; /* L + - (on layer 2) */
            layers = <2>;
        };

        ctrl_home {
            bindings = <&kp LC(HOME)>;
            key-positions = <16 18>; /* J + L (on layer 2) */
            layers = <2>;
        };

        ctrl_end {
            bindings = <&kp LC(END)>;
            key-positions = <17 19>; /* K + - (on layer 2) */
            layers = <2>;
        };

        fopen {
            bindings = <&kp LG(N2)>;
            key-positions = <8 9>;
            timeout-ms = <50>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <7 8 9>;
            timeout-ms = <50>;
        };


    };

    keymap {
        compatible = "zmk,keymap";
        layout = &LAYOUT_2U_SPACE;

        win_default_layer {
            display-name = "BASE";
            bindings = <
                &kp ESCAPE          &kp Q        &kp E      &kp U         &kp P                                    &kp D        &kp T         &kp R       &kp W       &mkp MB1
                &mt LSHIFT TAB      &lt 5 O        &lt 4 A      &kp I         &mt LCTRL F                              &mt RCTRL H  &kp Y         &lt 4 K       &lt 5 S       &mt LEFT_SHIFT B
                &mt LCTRL PERIOD    &mt LGUI X   &mt LALT C &mt LSHIFT V  &kp L         &kp LC(RG(LEFT))        &kp LG(RC(RIGHT))     &kp N        &mt RSHIFT M  &mt RALT G  &mt RGUI J  &mt RCTRL Z
                                                 &mo 2   &mo 2 &mo 1          &mo 2        &mo 2        &mo 2         &mo 2    &mo 2
            >;

            sensor-bindings =
                <&inc_dec_kp LC(MINUS) LC(EQUAL)>, // RE0: ctrl + - / +,,,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>; // RE1: volume down/up
        };

        layer_1 {
            display-name = "SYMBOLS";
            bindings = <
                &kp N1  &kp N2    &kp N3   &kp N4   &kp N5                       &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
               &kp JP_LT  &kp JP_LBKT  &kp LS(0x25)  &kp SPACE  &kp MINUS                               &kp BACKSPACE &kp ENTER     &kp JP_RPAR  &kp JP_RBKT  &kp JP_RT
                &kp END     &kp PAGE_DOWN &kp DOWN     &kp LEFT   &none      &mkp MB4  &mkp MB5         &kp DELETE     &kp RIGHT    &kp UP_ARROW &kp PAGE_UP  &kp HOME 
                                     &trans     &trans    &trans    &trans    &trans     &kp GRAVE       &kp DEL   &trans
            >;

            sensor-bindings =
                <&inc_dec_kp LC(MINUS) LC(EQUAL)>, // RE0: ctrl + - / +,,,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>; // RE1: volume down/up

        };

        layer_2 {
            display-name = "NUM / ARROW";
            bindings = <
                 &kp 0x38  &kp AT_SIGN    &kp HASH   &kp DOLLAR     &kp PERCENT    &kp CARET           &kp LS(SEMI)  &kp ASTERISK       &kp SLASH     &mkp MB2
                &kp SLASH        &kp N4     &kp N5     &kp RS(MINUS)  &kp MINUS                      &kp LS(SLASH)       &kp EQUAL     &kp DOUBLE_QUOTES  &kp LS(0x87)  &kp LS(0x1e)
                &kp N0           &kp N1     &kp N2     &kp N3     &kp DOT   &mkp MB4   &mkp MB5   &none         &kp LG(LEFT)  &kp LG(UP)    &kp LG(DOWN) &kp LG(RIGHT)
                                        &trans           &trans     &mo 3     &trans    &trans        &trans  &trans    &trans
            >;

            sensor-bindings =
                <&inc_dec_kp LC(MINUS) LC(EQUAL)>, // RE0: ctrl + - / +,,,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>; // RE1: volume down/up

        };

        layer_3 {
            display-name = "FUNCTION";
            bindings = <
                &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
                &none   &none   &none   &none   &none                   &none   &none   &none   &none   &none
                &none   &none   &none   &none   &none   &none   &none   &none   &none   &none    &none  &none
                                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings =
                <&inc_dec_kp LC(MINUS) LC(EQUAL)>, // RE0: ctrl + - / +,,,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>; // RE1: volume down/up

        };

        layer_4 {
            display-name = "SETTING";
            bindings = <
                &none  &none   &none   &none   &none                                       &none          &kp UP     &none              &none        &mkp MB3
                &none        &none   &none   &kp GRAVE   &kp MINUS                                 &kp BACKSPACE  &kp SPACE  &kp ENTER         &none         &none
                &none        &none   &none   &none   &none   &none           &none         &kp DELETE          &none           &none         &none         &none
                                                &trans       &trans  &trans  &trans  &trans  &trans          &trans        &trans
            >;

            sensor-bindings =
                <&inc_dec_kp LC(MINUS) LC(EQUAL)>, // RE0: ctrl + - / +,,,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>; // RE1: volume down/up

        };

        layer_5 {
            display-name = "tenkey-arrow";
            bindings = <
                &none        &none      &kp UP     &none       &none                                 &none          &kp N7          &kp N8        &kp N9         &mkp MB3
                &none        &kp LEFT   &kp DOWN   &kp RIGHT   &none                                 &kp BACKSPACE          &kp N4          &kp N5        &kp N6         &kp ENTER
                &none        &none   &none   &none   &none   &none           &none         &kp N0         &kp N1          &kp N2        &kp N3         &mt LCTRL PERIOD
                                                &trans       &trans  &trans  &trans  &trans  &trans          &trans        &trans
            >;

            sensor-bindings =
                <&inc_dec_kp LC(MINUS) LC(EQUAL)>, // RE0: ctrl + - / +,,,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>; // RE1: volume down/up



        };
    };
};
